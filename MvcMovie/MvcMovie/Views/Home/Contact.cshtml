@{
    ViewData["Title"] = "Contact";
}
<h2>@ViewData["Title"].</h2>
<h2>Your seat reservations (<span data-bind="text: seats().length"></span>)</h2>
<button data-bind="click: addSeat, enable: seats().length < 5">Reserve another seat</button>
<!-- Todo: Generate table body -->

<div data-bind="foreach: seats">
    <div>
        <div><input data-bind="value: name" /></div>
        <div><select data-bind="options: $root.availableMeals, value: meal, optionsText: 'mealName'"></select></div>
        <div data-bind="text: formattedPrice"></div>
        <div><a href="#" data-bind="click: $root.removeSeat">Remove</a></div>
    </div>
</div>

<div data-bind="foreach: codeExamples">
    <div>
        <div data-bind="text: title"></div>
        <div data-bind="text: description"></div>
    </div>
</div>

<h3 data-bind="visible: totalSurcharge() > 0">
    Total surcharge: $<span data-bind="text: totalSurcharge().toFixed(2)"></span>
</h3>

<script>
    // Class to represent a row in the seat reservations grid
    function SeatReservation(name, initialMeal) {
        var self = this;
        self.name = name;
        self.meal = ko.observable(initialMeal);

        self.formattedPrice = ko.computed(function () {
            var price = self.meal().price;
            return price ? "$" + price.toFixed(2) : "None";
        });
    }

    function CodeExample(title, description, url, imgUrl) {
        var self = this;
        self.title = title;
        self.description = description;
        self.url = url;
        self.imgUrl = imgUrl;

    }

    // Overall viewmodel for this screen, along with initial state
    function ReservationsViewModel() {
        var self = this;

        // Non-editable catalog data - would come from the server
        self.availableMeals = [
            { mealName: "Standard (sandwich)", price: 0 },
            { mealName: "Premium (lobster)", price: 34.95 },
            { mealName: "Ultimate (whole zebra)", price: 290 }
        ];

        self.codeExamples = [
            new CodeExample("title 1", "Description 1", "url 1", "image url 1"),
            new CodeExample("title 2", "Description 2", "url 2", "image url 2")
        ];

        // Editable data
        self.seats = ko.observableArray([
            new SeatReservation("Steve", self.availableMeals[0]),
            new SeatReservation("Bert", self.availableMeals[0])
        ]);
        
        //Operations
        self.addSeat = function () {
            self.seats.push(new SeatReservation("", self.availableMeals[0]));
        }

        self.removeSeat = function (seat) {
            self.seats.remove(seat)
        }

        self.totalSurcharge = ko.computed(function () {
            var total = 0;
            for (var i = 0; i < self.seats().length; i++) {
                total += self.seats()[i].meal().price;
            }
            return total;
        });

    }

    ko.applyBindings(new ReservationsViewModel());
</script>